---
import JsonLd from "../components/JsonLd.astro";
import { buildOrganization } from "../lib/schema";

const {
  title = "MinnaCircle",
  description = "サークル・イベントの検索と参加ができるコミュニティプラットフォーム。",
  lang = "ja",
  image,
} = Astro.props;

// ★ origin は Astro.site のみ参照（SSR前提の origin フォールバックを排除）
const origin = Astro.site ? String(Astro.site).replace(/\/$/, "") : "";

// パスは Astro.url から取得してOK（静的でも解決される）
const pathname = Astro.url.pathname + Astro.url.search;
const canonical = origin ? origin + pathname : undefined;

// og:image は絶対URLを優先。なければ /og.png を絶対化
const ogImage = image ?? (origin ? `${origin}/og.png` : "/og.png");

const orgSchema = buildOrganization({
  name: "MinnaCircle",
  url: origin || undefined,
  logo: origin ? `${origin}/og.png` : undefined,
  sameAs: [
    "https://x.com/your_account",
    "https://www.instagram.com/your_account",
  ].filter(Boolean),
});
---

<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />

    {canonical && <link rel="canonical" href={canonical} />}

    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />

    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="MinnaCircle" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {canonical && <meta property="og:url" content={canonical} />}
    <meta property="og:image" content={ogImage} />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />

    <JsonLd data={orgSchema} />
  </head>
  <body class="min-h-screen antialiased text-gray-900">
    <slot />
  </body>
</html>

