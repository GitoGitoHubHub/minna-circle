---
import BaseLayout from "../layouts/BaseLayout.astro";
import EventCard from "../components/EventCard.astro";
import CircleCard from "../components/CircleCard.astro";

/**
 * クエリパラメータを取得（例: /search?q=バスケ&type=event）
 * type: "event" | "circle" | "all"
 */
const url = new URL(Astro.request.url);
const q = url.searchParams.get("q") ?? "";
const type = (url.searchParams.get("type") ?? "all").toLowerCase();

/**
 * ▼ ダミーデータ（本番では API/DB に置き換え）
 *   - ここでは簡易フィルタで q をタイトル/説明/エリアに含むものを抽出
 */
const allEvents = [
  { id:"ev-001", title:"朝活ランニング＠木場公園", description:"初心者歓迎。会話しながら軽く3km！", image:"/og.png", dateText:"2025-09-01 07:00", placeText:"木場公園集合", isFeatured:true },
  { id:"ev-002", title:"週末バスケ個人参加", description:"経験不問。楽しく汗をかきましょう！", image:"/og.png", dateText:"2025-09-06 18:00", placeText:"江東区スポセン", isFeatured:false },
  { id:"ev-003", title:"英会話ゆるカフェ会", description:"カジュアルに英会話。お子様連れOK。", image:"/og.png", dateText:"2025-09-07 10:00", placeText:"清澄白河", isFeatured:false }
];

const allCircles = [
  { id:"cl-001", name:"ミンナでバスケ", intro:"初心者～経験者まで幅広く。試合より交流重視！", image:"/og.png", memberCount:42, areaText:"江東区・墨田区", isPickup:true },
  { id:"cl-002", name:"清澄コーヒー巡り部", intro:"週一でコーヒー店を探訪。豆知識交換しましょう。", image:"/og.png", memberCount:18, areaText:"清澄白河・門前仲町", isPickup:false },
  { id:"cl-003", name:"親子で外遊び", intro:"小さなお子さん歓迎。水遊び・公園ピクニックなど。", image:"/og.png", memberCount:27, areaText:"東陽町・有明", isPickup:false }
];

const norm = (s: string) => (s ?? "").toLowerCase();
const hitEvent = (ev) =>
  !q || norm(ev.title).includes(norm(q)) || norm(ev.description).includes(norm(q)) || norm(ev.placeText).includes(norm(q));
const hitCircle = (cl) =>
  !q || norm(cl.name).includes(norm(q)) || norm(cl.intro).includes(norm(q)) || norm(cl.areaText).includes(norm(q));

const events = allEvents.filter(hitEvent);
const circles = allCircles.filter(hitCircle);

// 表示対象を type で切り替え
const showEvents = type === "event" || type === "all";
const showCircles = type === "circle" || type === "all";
---

<BaseLayout title={`検索 | MinnaCircle`} lang="ja">
  <!-- ヘッダー -->
  <section class="max-w-6xl mx-auto px-4 pt-8">
    <h1 class="text-2xl md:text-3xl font-extrabold">検索結果</h1>
    <p class="text-gray-600 mt-1 text-sm md:text-base">
      キーワード: <span class="font-semibold">{q || "（未指定）"}</span>
      <span class="ml-2">/ 種別: <span class="font-semibold uppercase">{type}</span></span>
    </p>

    <!-- 簡易フィルタ（リンク遷移） -->
    <div class="mt-4 flex flex-wrap gap-2">
      <a href={`/search?q=${encodeURIComponent(q)}&type=all`} class="text-xs md:text-sm px-3 py-1 rounded-full border hover:bg-gray-50">すべて</a>
      <a href={`/search?q=${encodeURIComponent(q)}&type=event`} class="text-xs md:text-sm px-3 py-1 rounded-full border hover:bg-gray-50">イベント</a>
      <a href={`/search?q=${encodeURIComponent(q)}&type=circle`} class="text-xs md:text-sm px-3 py-1 rounded-full border hover:bg-gray-50">サークル</a>
    </div>
  </section>

  <!-- イベント結果 -->
  {showEvents && (
    <section class="max-w-6xl mx-auto px-4 py-6">
      <div class="flex items-baseline justify-between mb-4">
        <h2 class="text-xl md:text-2xl font-bold">イベント</h2>
        <span class="text-sm text-gray-500">件数: {events.length}</span>
      </div>
      {events.length > 0 ? (
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5">
          {events.map(ev => (<EventCard event={ev} />))}
        </div>
      ) : (
        <p class="text-gray-500 text-sm">該当するイベントが見つかりませんでした。</p>
      )}
    </section>
  )}

  <!-- サークル結果 -->
  {showCircles && (
    <section class="max-w-6xl mx-auto px-4 py-6">
      <div class="flex items-baseline justify-between mb-4">
        <h2 class="text-xl md:text-2xl font-bold">サークル</h2>
        <span class="text-sm text-gray-500">件数: {circles.length}</span>
      </div>
      {circles.length > 0 ? (
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5">
          {circles.map(cl => (<CircleCard circle={cl} />))}
        </div>
      ) : (
        <p class="text-gray-500 text-sm">該当するサークルが見つかりませんでした。</p>
      )}
    </section>
  )}
</BaseLayout>
