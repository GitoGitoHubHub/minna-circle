---
import BaseLayout from "../layouts/BaseLayout.astro";
import EventCard from "../components/EventCard.astro";
import CircleCard from "../components/CircleCard.astro";

/** ▼ ダミーデータ（本番ではAPI/サーバデータに差し替え） */
const featuredEvents = [
  {
    id: "ev-001",
    title: "朝活ランニング＠木場公園",
    description: "初心者歓迎。会話しながら軽く3km！",
    image: "/og.png",
    dateText: "2025-09-01 07:00",
    placeText: "木場公園集合",
    isFeatured: true
  },
  {
    id: "ev-002",
    title: "週末バスケ個人参加",
    description: "経験不問。楽しく汗をかきましょう！",
    image: "/og.png",
    dateText: "2025-09-06 18:00",
    placeText: "江東区スポセン",
    isFeatured: false
  },
  {
    id: "ev-003",
    title: "英会話ゆるカフェ会",
    description: "カジュアルに英会話。お子様連れOK。",
    image: "/og.png",
    dateText: "2025-09-07 10:00",
    placeText: "清澄白河",
    isFeatured: false
  }
];

const featuredCircles = [
  {
    id: "cl-001",
    name: "ミンナでバスケ",
    intro: "初心者～経験者まで幅広く。試合より交流重視！",
    image: "/og.png",
    memberCount: 42,
    areaText: "江東区・墨田区",
    isPickup: true
  },
  {
    id: "cl-002",
    name: "清澄コーヒー巡り部",
    intro: "週一でコーヒー店を探訪。豆知識交換しましょう。",
    image: "/og.png",
    memberCount: 18,
    areaText: "清澄白河・門前仲町",
    isPickup: false
  },
  {
    id: "cl-003",
    name: "親子で外遊び",
    intro: "小さなお子さん歓迎。水遊び・公園ピクニックなど。",
    image: "/og.png",
    memberCount: 27,
    areaText: "東陽町・有明",
    isPickup: false
  }
];

/** ▼ JSON-LD（構造化データ） */
const siteUrl = (Astro.site && Astro.site.href) ? Astro.site.href.replace(/\/$/, "") : "";
const organizationLd = {
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": "MinnaCircle",
  ...(siteUrl ? { "url": siteUrl } : {}),
  "logo": "/og.png"
};

const websiteLd = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "MinnaCircle",
  ...(siteUrl ? { "url": siteUrl } : {}),
  "potentialAction": {
    "@type": "SearchAction",
    "target": `${siteUrl}/search?q={query}`,
    "query-input": "required name=query"
  }
};

/** Eventスキーマ（ダミー配列から生成） */
const eventsLd = featuredEvents.map(ev => ({
  "@context": "https://schema.org",
  "@type": "Event",
  "name": ev.title,
  "description": ev.description,
  ...(siteUrl ? { "url": `${siteUrl}/events/${ev.id}` } : {}),
  "image": ev.image,
  "eventStatus": "https://schema.org/EventScheduled",
  "eventAttendanceMode": "https://schema.org/OfflineEventAttendanceMode",
  "startDate": ev.dateText, // 本番では ISO 形式へ整形推奨
  "location": { "@type": "Place", "name": ev.placeText },
  "organizer": { "@type": "Organization", "name": "MinnaCircle", ...(siteUrl ? { "url": siteUrl } : {}) }
}));
---

<BaseLayout title="MinnaCircle | みんなのためのサークル募集・検索" lang="ja">
  <!-- JSON-LD -->
  <script type="application/ld+json">{JSON.stringify(organizationLd)}</script>
  <script type="application/ld+json">{JSON.stringify(websiteLd)}</script>
  {eventsLd.map((e) => (
    <script type="application/ld+json">{JSON.stringify(e)}</script>
  ))}

  <!-- Hero（検索フォーム付き） -->
  <section class="max-w-6xl mx-auto px-4 py-8 md:py-12">
    <div class="bg-indigo-50 rounded-2xl p-6 md:p-10">
      <h1 class="text-2xl md:text-4xl font-extrabold mb-3">趣味でつながる、みんなのサークル</h1>
      <p class="text-gray-700 md:text-lg">近くのサークルやイベントを検索して、気軽に参加しよう。</p>

      <!-- 検索フォーム（GET /search） -->
      <form action="/search" method="get" class="mt-6 grid grid-cols-1 md:grid-cols-[1fr_180px_auto] gap-2 items-center">
        <label class="sr-only" for="q">キーワード</label>
        <input
          id="q"
          name="q"
          type="search"
          placeholder="例）バスケ / 英会話 / 清澄白河"
          class="w-full rounded-xl border px-4 py-2"
        />

        <label class="sr-only" for="type">種別</label>
        <select id="type" name="type" class="rounded-xl border px-3 py-2">
          <option value="all" selected>すべて</option>
          <option value="event">イベント</option>
          <option value="circle">サークル</option>
        </select>

        <button type="submit" class="rounded-xl bg-indigo-600 text-white px-5 py-2 shadow hover:bg-indigo-700 transition">
          検索
        </button>
      </form>

      <div class="mt-4 flex gap-3">
        <a href="/search" class="bg-white text-indigo-700 px-5 py-2 rounded-xl shadow hover:bg-gray-50 transition text-sm md:text-base">詳細検索へ</a>
        <a href="/vendor/new" class="text-indigo-700 font-semibold hover:underline text-sm md:text-base">サークルを作成</a>
      </div>
    </div>
  </section>

  <!-- 注目イベント -->
  <section class="max-w-6xl mx-auto px-4 py-6">
    <div class="flex items-baseline justify-between mb-4">
      <h2 class="text-xl md:text-2xl font-bold">注目イベント</h2>
      <a href="/events" class="text-indigo-600 text-sm hover:underline">すべて見る</a>
    </div>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5">
      {featuredEvents.map(ev => (<EventCard event={ev} />))}
    </div>
  </section>

  <!-- ピックアップサークル -->
  <section class="max-w-6xl mx-auto px-4 py-6">
    <div class="flex items-baseline justify-between mb-4">
      <h2 class="text-xl md:text-2xl font-bold">ピックアップサークル</h2>
      <a href="/circles" class="text-indigo-600 text-sm hover:underline">すべて見る</a>
    </div>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5">
      {featuredCircles.map(cl => (<CircleCard circle={cl} />))}
    </div>
  </section>
</BaseLayout>
